package ${package};

#foreach ($item in $import_parent)
import $item ;
#end

import lombok.RequiredArgsConstructor;
import jakarta.validation.Valid;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.*;

@RestController
@RequiredArgsConstructor
@RequestMapping("${path_api}")
public class ${class_name}Controller {

    @Autowired
    private ${class_name}Service service;

    @GetMapping
    public ResponseEntity<BaseResponse> getAll() {
        var result = this.service.getAll();
        return new ResponseEntity<BaseResponse>(result, HttpStatus.OK);
    }

    @GetMapping("/{id}")
    public ResponseEntity<BaseResponse> getById(@PathVariable("id") Long id) {
        var result = this.service.getById(id);
        return new ResponseEntity<BaseResponse>(result, HttpStatus.OK);
    }

    @PostMapping
    public ResponseEntity<BaseResponse> save(@RequestBody @Valid ${class_name}Request request) {
        var result = this.service.save(request);
        return new ResponseEntity<BaseResponse>(result, HttpStatus.CREATED);
    }

    @PatchMapping("/{id}")
    public ResponseEntity<BaseResponse> update(@RequestBody @Valid ${class_name}Request request,
                                               @PathVariable("id") Long id) {
        var result = this.service.update(request, id);
        return new ResponseEntity<BaseResponse>(result, HttpStatus.OK);
    }

    @DeleteMapping("/{id}")
    public ResponseEntity<BaseResponse> delete(@PathVariable("id") Long id) {
        var result = this.service.delete(id);
        return new ResponseEntity<BaseResponse>(result, HttpStatus.OK);
    }
}
